#!/usr/bin/env python3

import argparse
import subprocess
import json
import os


def split_image(input_path, step, default_duration, anchor_duration):
    # Get image dimensions using ImageMagick
    identify_cmd = ["identify", "-format", "%w %h", input_path]
    output = subprocess.check_output(identify_cmd).decode("utf-8")
    width, height = map(int, output.split())

    if width != 90 or height % 90 != 0:
        raise ValueError(
            "Input image must be exactly 90px wide and a multiple of 90px high"
        )

    output_dir = "credits"
    os.makedirs(output_dir, exist_ok=True)

    frame = 0
    frames = []
    positions = list(range(0, height - 89, step))
    for i, y in enumerate(positions):
        filename = f"credits-{frame}.png"
        out_path = os.path.join(output_dir, filename)
        crop_cmd = [
            "convert", input_path,
            "-crop", f"90x90+0+{y}",
            out_path
        ]
        subprocess.run(crop_cmd, check=True)

        if i == 0 or i == len(positions) - 1:
            duration = default_duration
        else:
            duration = anchor_duration if y % 90 == 0 else default_duration

        frames.append({"file": filename, "duration": duration})
        frame += 1

    state = {
        "frames": frames,
        "next_state": "awake",
        "actions": [],
        "side_effects": []
    }

    with open(os.path.join(output_dir, "credits.json"), "w") as f:
        json.dump(state, f, indent=2)


def main():
    parser = argparse.ArgumentParser(
        description="Split a tall 90px-wide image into overlapping 90x90 frames."
    )
    parser.add_argument("input", help="Input image file")
    parser.add_argument(
        "--step", type=int, default=3,
        help="Vertical step in pixels between frames (default: 3)"
    )
    parser.add_argument(
        "--duration", type=float, default=0.1,
        help="Default duration in seconds for non-aligned frames (default: 0.1)"
    )
    parser.add_argument(
        "--anchor-duration", type=float, default=5.0,
        help="Duration in seconds for aligned frames (default: 5.0)"
    )
    args = parser.parse_args()

    split_image(args.input, args.step, args.duration, args.anchor_duration)


if __name__ == "__main__":
    main()
